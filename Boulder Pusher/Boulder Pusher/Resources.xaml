<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Boulder_Pusher" xmlns:Foundation="using:Windows.Foundation">

    <!-- This ResourceDictionary-file includes all defining attributes
         that are used in Boulder Pusher -game to change it's buttons styles. -->
    
    <!-- Gradient color for buttons backgrounds -->
    <LinearGradientBrush x:Key="ButtonBackground" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="Black" Offset="0"/>
        <GradientStop Color="#FFB4A9A9" Offset="1"/>
    </LinearGradientBrush>

    <!-- Style for buttons -->
    <Style x:Key="MainButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource ButtonBackground}" />
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="BorderThickness" Value="5" />
        <Setter Property="Width" Value="300" />
        <Setter Property="Height" Value="50" />
        <!--<Setter Property="Padding" Value="12,4,12,4" /> -->
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="Rockwell Extra Bold" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontSize" Value="20" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                
                                <!-- Button state when user doesn't interact with it. -->
                                <VisualState x:Name="Normal" >
                                    <VisualState.Setters>
                                        <Setter Target="Border.(Border.CornerRadius)"> <!-- Used for a rounded button corners. -->
                                            <Setter.Value>
                                                <CornerRadius>10</CornerRadius>
                                            </Setter.Value>
                                        </Setter>
                                    </VisualState.Setters>
                                </VisualState>
                                
                                <!-- Button state when user moves mouse cursor on top of the button. -->
                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="Border.(UIElement.RenderTransformOrigin)">
                                            <Setter.Value>
                                                <Foundation:Point>0.5,0.5</Foundation:Point>
                                            </Setter.Value>
                                        </Setter>
                                        <!-- Increases button size -->
                                        <Setter Target="Border.(UIElement.RenderTransform).(CompositeTransform.ScaleX)" Value="1.5"/>
                                        <Setter Target="Border.(UIElement.RenderTransform).(CompositeTransform.ScaleY)" Value="1.2"/>
                                        <Setter Target="Border.(Border.CornerRadius)"> <!-- Used for a rounded button corners. -->
                                            <Setter.Value>
                                                <CornerRadius>10</CornerRadius>
                                            </Setter.Value>
                                        </Setter>
                                    </VisualState.Setters>
                                    <Storyboard>
                                        <!-- Changes text color to black -->
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Black" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                
                                <!-- Button state when it is pressed. -->
                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Target="Border.(Border.CornerRadius)"> <!-- Used for a rounded button corners. -->
                                            <Setter.Value>
                                                <CornerRadius>10</CornerRadius>
                                            </Setter.Value>
                                        </Setter>
                                    </VisualState.Setters>
                                    <!-- Changes button text and border color to default. -->
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border"
											Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonPressedBackgroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter"
											Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonPressedForegroundThemeBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="FocusVisualWhite"
											Storyboard.TargetProperty="Opacity"
											To="1"
											Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="FocusVisualBlack"
											Storyboard.TargetProperty="Opacity"
											To="1"
											Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="PointerFocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Border"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							Margin="3" RenderTransformOrigin="0.5,0.5">
                            <Border.RenderTransform>
                                <CompositeTransform/>
                            </Border.RenderTransform>
                            <ContentPresenter x:Name="ContentPresenter"
								Content="{TemplateBinding Content}"
								ContentTransitions="{TemplateBinding ContentTransitions}"
								ContentTemplate="{TemplateBinding ContentTemplate}"
								Margin="{TemplateBinding Padding}"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
								AutomationProperties.AccessibilityView="Raw"/>
                        </Border>
                        <Rectangle x:Name="FocusVisualWhite"
							IsHitTestVisible="False"
							Stroke="{ThemeResource FocusVisualWhiteStrokeThemeBrush}"
							StrokeEndLineCap="Square"
							StrokeDashArray="1,1"
							Opacity="0"
							StrokeDashOffset="1.5" />
                        <Rectangle x:Name="FocusVisualBlack"
							IsHitTestVisible="False"
							Stroke="{ThemeResource FocusVisualBlackStrokeThemeBrush}"
							StrokeEndLineCap="Square"
							StrokeDashArray="1,1"
							Opacity="0"
							StrokeDashOffset="0.5" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
